[users]
zhang = 123
li = 1234

;[main]
;# Let's use some in-memory caching to reduce the number of runtime lookups against a remote user store.
;# A real application might want to use a more robust caching solution (e.g. ehcache or a
;# distributed cache).  When using such caches, be aware of your cache TTL settings: too high
;# a TTL and the cache won't reflect any potential changes in Stormpath fast enough.  Too low
;# and the cache could evict too often, reducing performance.
;cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
;securityManager.cacheManager = $cacheManager
;
;# Configure a Realm to connect to a user datastore.  In this simple tutorial, we'll just point to Stormpath since it
;# takes 5 minutes to set up:
;stormpathClient = com.stormpath.shiro.client.ClientFactory
;stormpathClient.cacheManager = $cacheManager
;
;# (Optional) If you put your apiKey.properties in the non-default location, you set the location here
;#stormpathClient.apiKeyFileLocation = $HOME/.stormpath/apiKey.properties
;
;stormpathRealm = com.stormpath.shiro.realm.ApplicationRealm
;stormpathRealm.client = $stormpathClient
;
;# Find this URL in your Stormpath console for an application you create:
;# Applications -> (choose application userName) --> Details --> REST URL
;# (Optional) If you only have one Application
;#stormpathRealm.applicationRestUrl = https://api.stormpath.com/v1/applications/$STORMPATH_APPLICATION_ID
;
;stormpathRealm.groupRoleResolver.modeNames = userName
;securityManager.realm = $stormpathRealm
;
;shiro.loginUrl = /login
;
;[urls]
;/login = authc
;/logout = logout